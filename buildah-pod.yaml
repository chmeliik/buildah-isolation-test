apiVersion: v1
kind: Pod
metadata:
  generateName: buildah-
  labels:
    buildah-isolation-test: "true"
spec:
  restartPolicy: Never
  volumes:
    - name: workdir
      emptyDir: {}
    - name: var-lib-containers
      emptyDir: {}

  # Adds an important layer of security, see https://kubernetes.io/blog/2024/04/22/userns-beta/
  # Or *would* add, if the cluster actually supports user namespaces. Turns out this setting hasn't
  # taken effect in any of my tests yet.
  #hostUsers: false

  initContainers:
    - name: create-dockerfile
      image: quay.io/containers/buildah:v1.38.1
      volumeMounts:
        - name: workdir
          mountPath: /workdir
      workingDir: /workdir
      command: ["bash", "-c"]
      args:
        - |-
          cat << EOF > Containerfile
          FROM registry.access.redhat.com/ubi9/ubi:latest@sha256:53d6c19d664f4f418ce5c823d3a33dbb562a2550ea249cf07ef10aa063ace38f as builder
          RUN dnf -y install golang git-core

          WORKDIR /go/src/mikefarah/yq

          RUN git clone https://github.com/mikefarah/yq .

          RUN CGO_ENABLED=0 GOTOOLCHAIN=auto GOSUMDB=sum.golang.org go build -ldflags "-s -w" .

          RUN ./scripts/acceptance.sh

          # Rebase on ubi9
          FROM registry.access.redhat.com/ubi9/ubi:latest@sha256:53d6c19d664f4f418ce5c823d3a33dbb562a2550ea249cf07ef10aa063ace38f
          RUN dnf -y install gettext

          COPY --from=builder /go/src/mikefarah/yq/yq /usr/bin/yq

          WORKDIR /workdir

          RUN \
            groupadd -g 1000 yq; \
            useradd -u 1000 -g yq -s /bin/sh -d /home/yq yq

          RUN chown -R yq:yq /workdir

          USER yq

          ENTRYPOINT ["/usr/bin/yq"]
          EOF

  containers:
    - name: buildah
      image: quay.io/containers/buildah:v1.38.1
      volumeMounts:
        - name: workdir
          mountPath: /workdir
        # need to mount an emptyDir at /var/lib/containers to make
        # STORAGE_DRIVER=overlay work without having to mount /dev/fuse
        - name: var-lib-containers
          mountPath: /var/lib/containers
      workingDir: /workdir
      env:
        - name: BUILDAH_ISOLATION
          value: oci
        - name: STORAGE_DRIVER
          value: overlay
      command: ["bash", "-c"]
      # unshare fixes:
      #
      # error running container: from /usr/bin/crun ... opening file `/sys/fs/cgroup/cgroup.subtree_control` for writing: Read-only file system
      #
      # --mount fixes:
      #
      # Error: mount /var/lib/containers/storage/overlay:/var/lib/containers/storage/overlay, flags: 0x1000: operation not permitted
      #
      # --map-root-user fixes:
      #
      # unshare: unshare failed: Operation not permitted
      #
      # --map-users + --map-groups fixes:
      #
      # potentially insufficient UIDs or GIDs available in user namespace

      # --net=host fixes:
      #
      # error running container: from /usr/bin/crun ...: open `/proc/sys/net/ipv4/ping_group_range`: Read-only file system
      #
      # --pid=host fixes:
      #
      # error running container: from /usr/bin/crun ...: mount `proc` to `proc`: Operation not permitted
      args:
        - |-
          # Need to unset mount_program to let buildah use the kernel-native overlay
          # implementation and avoid having to mount /dev/fuse.
          # And also remove the fsync=0 argument, which doesn't apply without
          # mount_program = "/usr/bin/fuse-overlayfs"
          sed \
            -e 's/^mount_program/#mount_program/' \
            -e 's/,fsync=0//' \
            -i /etc/containers/storage.conf

          unshare --map-root-user --mount --map-users 1,1,65536 --map-groups 1,1,65536 -- buildah build --net=host --pid=host .
      securityContext:
        capabilities:
          add:
            # SETFCAP fixes:
            #
            # unshare: write failed /proc/self/uid_map: Operation not permitted
            - SETFCAP
        seLinuxOptions:
          # container_runtime_t fixes:
          #
          # error running container: from /usr/bin/crun ...: mount `devpts` to `dev/pts`: Permission denied
          type: container_runtime_t
